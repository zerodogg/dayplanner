#!/usr/bin/perl
# BuildLocale
# Build the locale files and directory tree for Day Planner
# Copyright (C) Eskild Hustvedt 2006
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use Cwd;
use File::Basename;
# We use LoadConfigFile to load the config info from the po dir
use FindBin;			# So that we can detect module dirs during runtime
use lib "$FindBin::RealBin/../modules/";
use lib "$FindBin::RealBin/../modules/DP-GeneralHelpers/lib/";
use DP::GeneralHelpers qw(LoadConfigFile);

$| = 1;

my $NoAlias;

# Usage:
# Main directory => any links to that directory
# 
# The links part can be ''. If not it should be a space seperated list
my %LocaleDirHash;

# Usage: InPath(command)
sub InPath ($) {
	foreach (split /:/, $ENV{PATH}) { if (-x "$_/@_" and ! -d "$_/@_" ) {   return 1; } } return 0;
}


die("I need msgfmt to be installed to work\n") unless InPath("msgfmt");

my $Self = dirname(Cwd::realpath($0));
die "Unable to detect the po directory\n" unless (-e "$Self/../po/");
my $PoDir = "$Self/../po/";
LoadConfigFile($PoDir.'/aliases.conf',\%LocaleDirHash);

my $LocaleDir;

if(defined($ARGV[0]) and length($ARGV[0])) {
	$LocaleDir = Cwd::realpath($ARGV[0]);
	$NoAlias = 1;
} else {
	$LocaleDir = Cwd::realpath("$Self/../");
	$LocaleDir = "$LocaleDir/locale";
}

chdir($PoDir) or die;

print "Building mo-files:";
foreach(<*.po>) {
	print " $_";
	my $MoName = $_;
	$MoName =~ s/po$/mo/;
	system("msgfmt -o $MoName $_");
}
print "\n";

print "Creating the $LocaleDir directory tree...\n";
unless (-d $LocaleDir) {
	mkdir($LocaleDir);
	print " Created: $LocaleDir\n";
}
unless($NoAlias) {
	unless (-e "$LocaleDir/README") {
		open(README, ">", "$LocaleDir/README");
		print README "This is a local locale tree for Day Planner. Much equal to that you would\n";
		print README "find in /usr/share/locale/.";
		close(README);
	}
}

foreach my $CurrentLocale (keys(%LocaleDirHash)) {
	if(-l "$LocaleDir/$CurrentLocale") {
		print " Removed link: $LocaleDir/$CurrentLocale\n";
		unlink("$LocaleDir/$CurrentLocale");
	}
	unless (-d "$LocaleDir/$CurrentLocale/LC_MESSAGES") {
		mkdir("$LocaleDir/$CurrentLocale");
		mkdir("$LocaleDir/$CurrentLocale/LC_MESSAGES");
		print " Created: $LocaleDir/$CurrentLocale\n";
	}
	unless($NoAlias) {
		foreach my $LocaleAlias (split(/\s+/, $LocaleDirHash{$CurrentLocale})) {
			if(-l "$LocaleDir/$LocaleAlias") {
				unless(readlink("$LocaleDir/$LocaleAlias") eq $CurrentLocale) {
					print " Removed link: $LocaleDir/$LocaleAlias\n";
					unlink("$LocaleDir/$LocaleAlias");
				}
			}
			unless (-e "$LocaleDir/$LocaleAlias") {
				symlink($CurrentLocale, "$LocaleDir/$LocaleAlias");
				print " Created symlink from \"$CurrentLocale\" to \"$LocaleAlias\"\n";
			}
		}
	}
}

print "Putting mo-files into place:";
foreach my $MO (<*.mo>) {
	my $orig = $MO;
	$orig =~ s/\.(po|mo)$//;
	if(not -d "$LocaleDir/$orig/")
	{
		print "\n$MO: No directory created\n";
		next;
	}
	system("mv $MO $LocaleDir/$orig/LC_MESSAGES/dayplanner.mo");
	print " $MO";
}

print "\nAll done!\n";
