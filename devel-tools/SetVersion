#!/usr/bin/perl
# SetVersion
# Simple tool to change the current Day Planner version in all source
# files.
# Copyright (C) Eskild Hustvedt 2006
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
use strict;
use warnings;
use Cwd qw/realpath getcwd/;
use File::Basename qw/dirname basename/;

unless (defined($ARGV[0]) and length($ARGV[0])) {
	die("Usage: " . basename($0) . " version.number NAME\n");
}

my $NewVersion = $ARGV[0];
my $Name = $ARGV[1];

my $OrigDir = dirname(realpath($0));
unless(-e "$OrigDir/dayplanner") {
        $OrigDir = "$OrigDir/../";
        unless (-e "$OrigDir/dayplanner") {
                $OrigDir = "$OrigDir/../../";
                unless (-e "$OrigDir/dayplanner") {
                        die "failed - I'm giving up. Run me from the devel-tools directory in the Day Planner source tree please.\n";
                }
        }
}
$OrigDir = realpath($OrigDir);
print "Working...\n";
foreach my $CurrentFile (qw#dayplanner dayplanner-daemon dayplanner-notifier services/dayplanner-services-daemon Makefile#) {
	print " $CurrentFile...";
	unless (-e $CurrentFile) {
		print " didn't exist - skipping\n";
		next;
	}
	if($CurrentFile eq 'Makefile') {
		$NewVersion =~ s/\s+/_/g;
		$NewVersion = lc($NewVersion);
	}
	
	open(FILE, "<$OrigDir/$CurrentFile") or die "Unable to open $OrigDir/$CurrentFile: $!\n";
	my @File;
	foreach(<FILE>) {
		s/^((my|our)\s+\$D?P?Version\s+=\s+["']?)[^"'\s]+(["']?;)/$1$NewVersion$3/i;
		s/^VERSION=\d+(\.\d+)+\s*$/VERSION=$NewVersion\n/i;
		if($Name) {
			s/^((my|our)\s+\$D?P?VersionName\s+=\s["']).*(["'];)/$1$Name$3/i;
		}
		push(@File, $_);
	}
	close(FILE);
	
	open(WRITE_FILE, ">$OrigDir/$CurrentFile") or die "Unable to open $OrigDir/$CurrentFile for writing: $!\n";
	foreach(@File) {
		print WRITE_FILE $_;
	}
	close(WRITE_FILE);

	print "done\n";
}
