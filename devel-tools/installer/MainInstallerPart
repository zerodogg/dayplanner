#!/usr/bin/perl
# MainInstallerPart
# Copyright (C) Eskild Hustvedt 2006
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

# This is a quick "hack" of an installer for Day Planner

use strict;
use warnings;
use Gtk2;

my $ProgressWin;
my $InstallDirectory = "$ENV{HOME}/.local/share/dayplanner";

$| = 1;

print "Perl installer part...\n";
print "Using install dir: $InstallDirectory\n";
my $Internal_Version = '$Id$';
print "Installer version: $Internal_Version\n";

die("Fatal internal error: Perl installer part got no data directory supplied\n") unless(defined($ARGV[0]));
die("Fatal internal error: The data directory supplied ($ARGV[0]) does not exist.\nThis probably means that this package is corrupt, try re-downloading it.\n") unless -e $ARGV[0];

my $InstallerData = $ARGV[0];
print "Installer data is in $InstallerData\n";

sub InPath {
	foreach (split /:/, $ENV{PATH}) {
		if (-x "$_/@_") {
			return 1;
		}
	}
	return 0;
}


if(defined($ARGV[1]) and $ARGV[1] eq 'auto') {
	print "Using automatic install - skipping prompts\n";
} else {
	Gtk2->init();
	my $Dialog = Gtk2::MessageDialog->new(undef, "modal", 'question', 'yes-no', "Welcome to the day planner installation program. This will install day planner into a subdirectory of your home directory and put a day planner icon on your desktop. All of this will be done automatically.\n\nDo you want to continue?");
	my $Reply = $Dialog->run();
	$Dialog->destroy();
	unless($Reply eq 'yes') {
		print "Exiting as requested by user\n";
		exit(0);
	}
	# Flush the display
	Gtk2->main_iteration while Gtk2->events_pending;

	my $PG_Label = Gtk2::Label->new("Installing day planner...");
	$PG_Label->show();
	$ProgressWin = Gtk2::Window->new('toplevel');
	$ProgressWin->set_resizable(0);
	$ProgressWin->set_position("center");
	$ProgressWin->set_title("Installing...");
	$ProgressWin->add($PG_Label);
	$ProgressWin->show();
	$ProgressWin->show_all();
	$ProgressWin->show_now();
	$PG_Label->show_now();
	Gtk2->main_iteration while Gtk2->events_pending;
}


if(-d $InstallDirectory) {
	print "Found old install, running uninstaller first...\n";
	if(-e "$InstallDirectory/uninstall.sh") {
		system("sh '$InstallDirectory/uninstall.sh'") and print "Uninstaller failed, expect trouble.\n";
	} else {
		print "Failed to run uninstaller, expect trouble.\n";
	}
}

print "Installing...";
system("mkdir -p $InstallDirectory");

if(defined($ENV{DAYPLANNER_CP_SILENTERRORS}) and $ENV{DAYPLANNER_CP_SILENTERRORS} eq 'TRUE') {
	# When using the local installer we might get svn files which will make cp display
	# harmless errors. Setting DAYPLANNER_CP_SILENTERRORS to TRUE silences cp
	system("cp -r $InstallerData/* $InstallDirectory/ &>/dev/null");
} else {
	system("cp -r $InstallerData/* $InstallDirectory/");
}

print ".";

my @BINDIRS = (
	"$ENV{HOME}/bin",
	"$ENV{HOME}/.bin",
	"$ENV{HOME}/.local/bin",
	"/usr/local/bin",
);

print ".";

my @BINLINKS;

foreach(@BINDIRS) {
	if(-e $_ and -d $_ and -w $_) {
		symlink("$InstallDirectory/dayplanner", "$_/dayplanner");
		symlink("$InstallDirectory/dayplanner-daemon", "$_/dayplanner-daemon");
		symlink("$InstallDirectory/dayplanner-notifier", "$_/dayplanner-notifier");
		push(@BINLINKS, $_)
	}
}
# Write uninstall script
open(UNINSTALL, ">$InstallDirectory/uninstall.sh");
print UNINSTALL "#!/bin/sh\n";
print UNINSTALL "echo -n \"Uninstalling...\"\n";
print UNINSTALL "cd \$HOME\n";
print UNINSTALL "rm -rf $InstallDirectory\n";
print UNINSTALL "echo -n \".\"\n";
foreach(@BINLINKS) {
	print UNINSTALL "rm -f $_/dayplanner $_/dayplanner-daemon $_/dayplanner-notifier\n";
	print UNINSTALL "echo -n \".\"\n";
}
print UNINSTALL "[ -e \$HOME/.menu/dayplanner.menu ] && rm -f \$HOME/.menu/dayplanner.menu && update-menus &> /dev/null\n";
print UNINSTALL "echo -n \".\"\n";
print UNINSTALL "[ -e \$HOME/Desktop/dayplanner.desktop ] && rm -f \$HOME/Desktop/dayplanner.desktop\n";
print UNINSTALL "echo \"done\"\n";
print UNINSTALL "echo \"Day planner has been uninstalled.\"\n";
close(UNINSTALL);
system("chmod +x $InstallDirectory/uninstall.sh");

print ".";

# TODO: xdg menu support and xdg (portland-project-style) desktop icon support

# Write desktop item
if(-d "$ENV{HOME}/Desktop") {
	open(DESKTOP, ">$ENV{HOME}/Desktop/dayplanner.desktop");
	print DESKTOP "[Desktop Entry]\n";
	print DESKTOP "Exec=$InstallDirectory/dayplanner\n";
	print DESKTOP "Icon=$InstallDirectory/art/dayplanner_48.png\n";
	print DESKTOP "Name=Day planner\n";
	print DESKTOP "StartupNotify=true\n";
	print DESKTOP "Terminal=false\n";
	print DESKTOP "Type=Application\n";
	print DESKTOP "Name[nb]=Dagsplanlegger\n";
	print DESKTOP "Name[no]=Dagsplanlegger\n";
	close(DESKTOP);
}
# Write menu item
if(InPath("update-menus")) {
	mkdir("$ENV{HOME}/.menu/") unless -d "$ENV{HOME}/.menu/";
	open(MENU, ">$ENV{HOME}/.menu/dayplanner.menu");
	print MENU "?package(%{name}):command=\"$InstallDirectory/dayplanner\"  icon=\"$InstallDirectory/art/dayplanner_48.png\"         needs=\"x11\"         section=\"Office/Time Management\"         title=\"Day planner\"         longtitle=\"An easy to use graphical day planner\"\n";
	close(MENU);
	system("update-menus &>/dev/null");
}

print "done\n";
unless(defined($ARGV[1]) and $ARGV[1] eq 'auto') {
	$ProgressWin->destroy();
	my $Finished = Gtk2::MessageDialog->new(undef, "modal", 'info', 'ok', "You can start day planner by clicking on the icon on your desktop.\n\n(If it doesn't work, you can run $InstallDirectory/dayplanner directly)\n\nIf you at some point want to uninstall day planner run $InstallDirectory/uninstall.sh");
	$Finished->run();
	$Finished->destroy();
}
print "Installer successfully finished!\n";
exit(0);
