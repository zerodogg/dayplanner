#!/usr/bin/perl
# GenDesktop
# Generates the .desktop file for Day Planner
# $Id$
# Copyright (C) Eskild Hustvedt 2006
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;			# Force strict coding
use warnings;			# Tell perl to warn about things
use Locale::gettext;		# Allow the program to be translated
use FindBin;			# So that we can detect stuff at runtime
use POSIX;
use utf8;
use Fatal qw/open close chdir/;
# Useful constants for prettier code
use constant { true => 1, false => 0 };
# We use LoadConfigFile to load the config info from the po dir
use FindBin;			# So that we can detect module dirs during runtime
use lib "$FindBin::RealBin/../modules/";
use lib "$FindBin::RealBin/../modules/DP-GeneralHelpers/lib/";
use DP::GeneralHelpers qw(LoadConfigFile);

# Purpose: Get "Day Planner" translated to one language
# Usage: GetForLocale(pofile);
# 	This is rather hacky, but works
sub GetForLocale
{
	my $locale = shift;
	open(my $LocFile, '<',$locale) or die();
	my $NextIs = false;
	my $LocalizedName;
	while($_ = <$LocFile>)
	{
		if ($NextIs and /^msgstr/)
		{
			$LocalizedName = $_;
			$LocalizedName =~ s/^msgstr\s+"//;
			$LocalizedName =~ s/"\s*$//;
			last;
		}			
		elsif (/^msgid "Day Planner"/)
		{
			$NextIs = true;
		}
	}
	close($LocFile);
	return($LocalizedName);
}

my %Languages;

my($BinDir, $IconsDir) = @ARGV;
my $Icon;

unless(defined($BinDir)) {
	die("Usage: $0 [DIRECTORY CONTAINING THE dayplanner BINARY] [ICONS DIR]\n The binary dir is mandatory, icons dir optional.");
}

if(defined($IconsDir)) {
	$Icon = "$IconsDir/dayplanner-48x48.png";
} else {
	$Icon = "dayplanner.png";
}

# Set dirs
chdir($FindBin::RealBin);
chdir("..");

print "Generating .desktop...:\n";
chdir('po');
foreach(sort glob('*.po'))
{
	my $locale = $_;
	$locale =~ s/\.po//;
	$Languages{$locale} = GetForLocale($_);
	if(not defined($Languages{$locale}))
	{
		print "$locale: Fatal: Unable to detect string, got undef!\n";
	}
	elsif($Languages{$locale} eq '' or $Languages{$locale} eq "Day Planner")
	{
		delete($Languages{$locale});
		print "$locale: No valid translation of \"Day Planner\" found\n";
	} else
	{
		print "$locale: OK\n";
	}
}
# Fetch aliases
chdir("..");
my %LangAliases;
LoadConfigFile('./po/aliases.conf',\%LangAliases);
# Create the file
print "Writing...";
open(my $Desktop, '>', './doc/dayplanner.desktop');
binmode($Desktop, ':utf8');
print '.';
print $Desktop "[Desktop Entry]\n";
print $Desktop "Version=1.0\n";
print $Desktop "Encoding=UTF-8\n";
print $Desktop "MimeType=text/calendar\n";
print $Desktop "Categories=X-MandrivaLinux-Office-TimeManagement;Office;Calendar;GTK;GNOME;\n";
if($BinDir eq '.') {
	print $Desktop "Exec=dayplanner\n";
} else {
	print $Desktop "Exec=$BinDir/dayplanner\n";
}
print $Desktop "Icon=$Icon\n";
print $Desktop "Name=Day Planner\n";
print $Desktop "StartupNotify=false\n";
print $Desktop "Terminal=false\n";
print $Desktop "Type=Application\n";
print '.';
# We use this hash to esnure that we don't write the same value more than once
my %LangWrittenList;
foreach(keys(%Languages))
{
	if (defined($Languages{$_}))
	{
		print $Desktop "Name[$_]=$Languages{$_}\n";
		$LangWrittenList{$_} = true;
		if(defined($LangAliases{$_}))
		{
			foreach my $alias (split(/\s+/,$LangAliases{$_}))
			{
				next if $alias =~ /\./;
				next if $LangWrittenList{$alias};
				print $Desktop "Name[$alias]=$Languages{$_}\n";
				$LangWrittenList{$alias} = true;
			}
		}
	}
}
print ".";
close($Desktop);
print "done\n";
print "Wrote ./doc/dayplanner.desktop\n";
